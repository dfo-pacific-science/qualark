{
	"name": "pipe_bronze_to_silver_testfishing_and_sampling",
	"properties": {
		"activities": [
			{
				"name": "df_insert_drifts",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "df_testfishing_detailedcatch_to_silver",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_insert_drifts_silver_to_sql",
						"type": "DataFlowReference",
						"parameters": {
							"p_run_id": {
								"value": "'@{pipeline().RunId}'",
								"type": "Expression"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "df_insert_fish_counts",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "df_insert_drifts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_insert_fish_samples_copy1",
						"type": "DataFlowReference",
						"parameters": {
							"p_run_id": {
								"value": "'@{pipeline().RunId}'",
								"type": "Expression"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "df_testfishing_detailedcatch_to_silver",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_qualark_testfishandsamples_to_silver",
						"type": "DataFlowReference",
						"parameters": {
							"p_run_id": {
								"value": "'@{pipeline().RunId}'",
								"type": "Expression"
							},
							"error_sink_filename": {
								"value": "'@{concat('invalid_detailed_catch-', string(pipeline().RunId), '.csv')\n}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"bronzetestfisingandsamplingfile": {
								"folderPath": {
									"value": "@pipeline().parameters.inputFolderPath",
									"type": "Expression"
								}
							},
							"sink1": {
								"runId": "\"\"",
								"file_name": "errorFile_"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "CheckErrorFiles",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "GetErrorFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(length(activity('GetErrorFiles').output.childItems), 0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "SetStatus_Success",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "finalStatus",
								"value": "Success"
							}
						},
						{
							"name": "NotifyLogicApp_ErrorFiles_copy1",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "SetStatus_Success",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"url": {
									"value": "@pipeline().parameters.pLogicAppUrl",
									"type": "Expression"
								},
								"body": {
									"value": "{\n  \"PipelineStatus\": \"Success\",\n  \"PipelineRunId\": \"@{pipeline().RunId}\",\n  \"AzureFileLocation\": \"@{pipeline().parameters.pAzureFileLocation}\",\n  \"SharePointFolder\": \"@{pipeline().parameters.pSharePointFolder}\",\n  \"Extension\": \"@{pipeline().parameters.pExtension}\"\n}\n",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "SetStatus_SuccessWithErrorFiles",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "finalStatus",
								"value": "SuccessWithErrorFiles"
							}
						},
						{
							"name": "NotifyLogicApp_ErrorFiles",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "SetStatus_SuccessWithErrorFiles",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"url": {
									"value": "@pipeline().parameters.pLogicAppUrl",
									"type": "Expression"
								},
								"body": {
									"value": "{\n  \"PipelineStatus\": \"SuccessWithErrorFiles\",\n  \"PipelineRunId\": \"@{pipeline().RunId}\",\n  \"AzureFileLocation\": \"@{pipeline().parameters.pAzureFileLocation}\",\n  \"SharePointFolder\": \"@{pipeline().parameters.pSharePointFolder}\",\n  \"Extension\": \"@{pipeline().parameters.pExtension}\"\n}\n",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "GetErrorFiles",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "df_insert_fish_counts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_error_sinkfolder_bronze",
						"type": "DatasetReference",
						"parameters": {
							"runId": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "SetStatus_Failed",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "df_testfishing_detailedcatch_to_silver",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "df_insert_drifts",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "df_insert_fish_counts",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "finalStatus",
					"value": "Failed"
				}
			},
			{
				"name": "NotifyLogicApp_Failed",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SetStatus_Failed",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": {
						"value": "@pipeline().parameters.pLogicAppUrl",
						"type": "Expression"
					},
					"body": {
						"value": "{\n  \"PipelineStatus\": \"Failed\",\n  \"PipelineRunId\": \"@{pipeline().RunId}\",\n  \"AzureFileLocation\": \"@{pipeline().parameters.pAzureFileLocation}\",\n  \"SharePointFolder\": \"@{pipeline().parameters.pSharePointFolder}\",\n  \"Extension\": \"@{pipeline().parameters.pExtension}\"\n}\n",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"inputFolderPath": {
				"type": "string",
				"defaultValue": "Prototype/Qualark Test Fishing and Sampling/20250220-153438"
			},
			"pLogicAppUrl": {
				"type": "string",
				"defaultValue": "https://prod-27.canadacentral.logic.azure.com:443/workflows/a2e353e8764b4cbbb7b07df8f3161c99/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=tVfjTd553nWAuxFmsNiUaCZuuSeWjuxYzEP4OaNrbmc"
			},
			"pAzureFileLocation": {
				"type": "string",
				"defaultValue": "Prototype/Failure"
			},
			"pSharePointFolder": {
				"type": "string",
				"defaultValue": "Failure"
			},
			"pExtension": {
				"type": "string",
				"defaultValue": ".csv"
			}
		},
		"variables": {
			"finalStatus": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-03-07T21:10:58Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}